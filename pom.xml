<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2020
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--> 
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.5</version>
    <relativePath />
  </parent>
  <groupId>com.ericsson.oss.common.service</groupId>
  <packaging>jar</packaging>
  <name>Notification Service</name>
  <artifactId>eric-oss-notification-service</artifactId>
  <version>1.14.0-SNAPSHOT</version>

  <properties>
    <java.version>11</java.version>
    <eric-oss-notification-service-api.version>1.0.13</eric-oss-notification-service-api.version>
    <eric-common-logging.version>1.0.27</eric-common-logging.version>
    <!-- JaCoCo plugin for Java Code Coverage -->
    <maven.jcoco-plugin.version>0.8.4</maven.jcoco-plugin.version>
    <!-- Minimum ratio or percentage of instructions to be covered, used by
    JaCoCo plugin. Industry standard is 0.8 or 80% which allows at least 80%
    of the code to be covered by the test cases. -->
    <jacoco-maven-plugin.coveredratio.minimum>0.8</jacoco-maven-plugin.coveredratio.minimum>
    <testcontainers.version>1.16.3</testcontainers.version>
    <springfox-version>3.0.0</springfox-version>
    <guava.version>31.0.1-jre</guava.version>
    <rsql.version>2.1.0</rsql.version>
    <json-flattener.version>0.14.2</json-flattener.version>
    <json-path.version>2.8.0</json-path.version>
    <version.maven-checkstyle-plugin>3.0.0</version.maven-checkstyle-plugin>
    <version.checkstyle-tool>6.11.2</version.checkstyle-tool>
    <version.enm-checkstyle-module>1.1.103</version.enm-checkstyle-module>
    <jaeger-client-version>1.1.0</jaeger-client-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <postgresql.version>42.5.1</postgresql.version>
    <snakeyaml.version>1.33</snakeyaml.version>
    <reactor-bom.version>2020.0.24</reactor-bom.version>
    <kubernetes-client.version>5.11.2</kubernetes-client.version>

    <!-- Sonar configuration -->
    <sonar.projectKey>eric-eo-notification-service</sonar.projectKey>
    <sonar.projectName>eric-eo-notification-service</sonar.projectName>
    <otj-pg-embedded.version>1.0.0</otj-pg-embedded.version>
    <spring-cloud.version>2021.0.3</spring-cloud.version>
    <jackson-databind.version>2.14.0</jackson-databind.version>
    <jackson-module-scala.version>2.14.0</jackson-module-scala.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.ericsson.oss.common.service</groupId>
      <artifactId>eric-oss-notification-service-api</artifactId>
      <version>${eric-oss-notification-service-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ericsson.oss.orchestration.so.common</groupId>
      <artifactId>error-message-factory</artifactId>
      <version>1.0.15</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-kubernetes-fabric8-config</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
       <groupId>org.yaml</groupId>
       <artifactId>snakeyaml</artifactId>
       <version>${snakeyaml.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>${jackson-databind.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.module</groupId>
		<artifactId>jackson-module-scala_2.13</artifactId>
		<version>${jackson-module-scala.version}</version>
	</dependency>
	<dependency>
    	<groupId>io.projectreactor</groupId>
    	<artifactId>reactor-bom</artifactId>
    	<version>${reactor-bom.version}</version>
    	<type>pom</type>
	</dependency>
    <dependency>
    	<groupId>io.fabric8</groupId>
    	<artifactId>kubernetes-client</artifactId>
    	<version>${kubernetes-client.version}</version>
    </dependency>

    <!--     Test Containers-->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
	<!-- Micormeter core dependecy  -->
	<dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
	</dependency>
	<!-- Micrometer Prometheus registry  -->    
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>com.ericsson.oss.orchestration.eo</groupId>
      <artifactId>eric-common-logging</artifactId>
      <version>${eric-common-logging.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>cz.jirutka.rsql</groupId>
      <artifactId>rsql-parser</artifactId>
      <version>${rsql.version}</version>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>${json-path.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.wnameless.json</groupId>
      <artifactId>json-flattener</artifactId>
      <version>${json-flattener.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_spring_boot</artifactId>
      <version>0.6.0</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-server-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.opentable.components</groupId>
      <artifactId>otj-pg-embedded</artifactId>
      <version>${otj-pg-embedded.version}</version>
    <exclusions>
      <exclusion>
        <groupId>*</groupId>
        <artifactId>*</artifactId>
      </exclusion>
    </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-checkstyle-plugin -->
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.4.2</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- JaCoCo plugin for Java Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jcoco-plugin.version}</version>
        <configuration>
          <append>true</append>
          <excludes>
            <exclude>**/api/*.*</exclude>
            <exclude>**/api/model/*.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-check</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <!-- JaCoCo uses a set of different counters to calculate coverage
            metrics -->
            <!-- Check configuration used to specify rules on element types (BUNDLE,
            PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
            to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
            and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
            COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). A limit ratio may
            optionally be declared as a percentage where 0.80 and 80% represent the same
            value, the value must end with %. -->
            <configuration>
              <rules>
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/api/model/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-ut</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/api/model/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-it</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/api/model/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/api/model/*.*</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <header>license/copyright.txt</header>
            <validHeaders>
            	<validHeader>license/copyright-2021.txt</validHeader>
            	<validHeader>license/copyright-2022.txt</validHeader>
            	<validHeader>license/copyright-2023.txt</validHeader>
            </validHeaders>           
            <excludes>
              <exclude>**/.bob/**</exclude>
              <exclude>bob/**</exclude>
              <exclude>bob/*</exclude>
              <exclude>bob*/</exclude>			  
              <exclude>src/main/resources/**</exclude>
              <exclude>**/.helmignore</exclude>
              <exclude>**/*.html</exclude>
              <exclude>**/_helpers.tpl</exclude>
              <exclude>**/*.tgz</exclude>
              <exclude>**/VERSION*</exclude>
              <exclude>**/*.repo</exclude>
              <exclude>**/*.Jenkinsfile</exclude>
              <exclude>**/*.adoc</exclude>
              <exclude>**/*.config</exclude>
              <exclude>design-rule-check-report*</exclude>
              <exclude>zally-api-lint-report.txt</exclude>
              <exclude>*artifact.properties</exclude>
              <exclude>*artifact.properties</exclude>
              <exclude>**/*.txt</exclude>
              <exclude>**/custom_stages.yaml</exclude>
              <exclude>**/*.sql</exclude>
              <exclude>**/fossa/*</exclude>
              <exclude>ci-cd/*</exclude>
              <exclude>ci-cd*/</exclude>
              <exclude>**/config/</exclude>
              <exclude>generated/*</exclude>
              <exclude>generated*/</exclude>
              <exclude>dependencies/*</exclude>
              <exclude>dependencies*/</exclude>			  
            </excludes>
            <headerDefinitions>
              <headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
              <headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
              <headerDefinition>./license/scriptHeaderDefinition.xml</headerDefinition>
            </headerDefinitions>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.maven-checkstyle-plugin}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${version.checkstyle-tool}</version>
            </dependency>
            <dependency>
              <groupId>com.ericsson.cds</groupId>
              <artifactId>checkstyle-module</artifactId>
              <version>${version.enm-checkstyle-module}</version>
            </dependency>
          </dependencies>
          <configuration>
            <consoleOutput>true</consoleOutput>
            <logViolationsToConsole>true</logViolationsToConsole>
            <configLocation>/enm/checkstyle/checkstyle.xml</configLocation>
            <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
            <violationSeverity>warning</violationSeverity>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.0.1398</version>
          <executions>
            <execution>
              <id>validate-checkstyle</id>
              <goals>
                <goal>sonar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <distributionManagement>
	  <snapshotRepository>
		  <id>snapshot</id>
		  <name>armseligic-snapshot</name>
		  <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-dev-local</url>		      
	  </snapshotRepository>
	  <repository>
		   <id>release</id>
		   <name>armseligic-release</name>
		   <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-release-local</url>
	  </repository>
  </distributionManagement>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          <show>private</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>dev</id>
      <dependencies>
        <dependency>
          <groupId>com.opentable.components</groupId>
          <artifactId>otj-pg-embedded</artifactId>
          <version>${otj-pg-embedded.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
